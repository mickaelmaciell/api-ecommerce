const app = require('./app'); // Importa o arquivo principal da aplica√ß√£o Express
const { sequelize } = require('./models'); // Importa a inst√¢ncia do Sequelize para manipular o banco de dados
require('dotenv').config(); // Carrega as vari√°veis de ambiente do arquivo .env
const setupSwaggerDocs = require('./docs/swagger'); // Configura√ß√£o do Swagger para documenta√ß√£o da API

// Logs das vari√°veis de ambiente para verificar se est√£o configuradas corretamente
console.log('Conex√£o com o banco de dados:');
console.log('DB_NAME:', process.env.DB_NAME); // Nome do banco de dados
console.log('DB_USER:', process.env.DB_USER); // Usu√°rio do banco de dados
console.log('DB_HOST:', process.env.DB_HOST); // Host do banco de dados

// Sincroniza o banco de dados com os modelos definidos no Sequelize
sequelize.sync({ alter: true  }) // 'force: false' evita recriar tabelas toda vez que o servidor reinicia
  .then(() => {
    console.log('üì¶ Banco de dados sincronizado com sucesso!');
    const PORT = process.env.PORT || 3000; // Define a porta do servidor a partir do .env ou padr√£o 3000
    app.listen(PORT, () => {
      console.log(`üöÄ Servidor rodando na porta ${PORT}`);
      setupSwaggerDocs(app); // Configura o Swagger para documenta√ß√£o da API
    });
  })
  .catch((err) => {
    console.error('‚ùå Erro ao sincronizar o banco de dados:', err); // Trata e exibe erros de conex√£o
  });
